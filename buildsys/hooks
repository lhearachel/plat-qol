# Entries in this file will create jumps from existing game code to your new code, overwriting
# around 8-10 bytes of code to do so. For example:
#
#   arm9 Summary_IVEV 0808CA20 1
#
# This will open up the arm9 binary, jump to file offset 0x08CA20, and assemble the following
# at that offset:
#
#   ldr     r1, =Summary_IVEV|1
#   bx      r1
#   .pool
#
# Or, to open an overlay and perform similar:
#
#   0002 AddWildPartyPokemon_hook 080029E0 5
#
# You can link directly to C code if there is a free register to do so. The ARM Assembly standard
# specifies that r0-r3 are arguments to a function and thus are not preserved across function
# calls. Thus, if your function has fewer than 4 arguments, you can use r3 as a hook register and
# replace the entire thing.
#
# Otherwise, you'll need to link to a "hook" to the C code, where you will write some custom ASM
# code to make the game feel okay about what it's doing.

#include "include/config.h"

#ifdef DETAILED_SUMMARY_SCREEN
arm9 Summary_IVEV 0808CA20 1
arm9 Summary_Entry_Hook 08090A3A 1
#endif

#ifdef FIELD_HMS
# This makes the field move menu always show Fly and Defog if the mons can learn them
# and the player has the requisite HM
arm9 PartyList_MakeFieldMoveMenu 080800B4 2

# This rewrites the whole routine to make some modifications to how Surf's legality
# is checked
0005 ScriptCheck_TalkToTile 021D271C 2
#endif

#ifdef MAP_B_TO_RUN_FROM_BATTLES
0016 Battle_MapBToFlee 0226CC98 3
#endif

#ifdef BUGFIX_BOSS_DOUBLES_MUSIC
arm9 FieldEncounter_GetSpecialEffects 02051B50 1
#endif

#ifdef BUGFIX_TRAINER_PARTY_POKEMON
arm9 Trainer_MakePokemon 020793B8 3
#endif